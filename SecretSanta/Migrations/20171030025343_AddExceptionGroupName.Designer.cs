// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SecretSanta;
using System;

namespace SecretSanta.Migrations
{
    [DbContext(typeof(SecretSantaDbContext))]
    [Migration("20171030025343_AddExceptionGroupName")]
    partial class AddExceptionGroupName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecretSanta.Models.ExceptionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GroupId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("ExceptionGroup");
                });

            modelBuilder.Entity("SecretSanta.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LeaderEmail")
                        .HasMaxLength(50);

                    b.Property<string>("LeaderName")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("SecretSanta.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("SecretSanta.Models.PersonExceptionGroup", b =>
                {
                    b.Property<int>("PersonExceptionGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExceptionGroupId");

                    b.Property<int>("PersonId");

                    b.HasKey("PersonExceptionGroupId");

                    b.HasIndex("ExceptionGroupId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonExceptionGroup");
                });

            modelBuilder.Entity("SecretSanta.Models.PersonGroup", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("GroupId");

                    b.HasKey("PersonId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("PersonGroup");
                });

            modelBuilder.Entity("SecretSanta.Models.ExceptionGroup", b =>
                {
                    b.HasOne("SecretSanta.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecretSanta.Models.PersonExceptionGroup", b =>
                {
                    b.HasOne("SecretSanta.Models.ExceptionGroup", "ExceptionGroup")
                        .WithMany("PersonExceptionGroups")
                        .HasForeignKey("ExceptionGroupId");

                    b.HasOne("SecretSanta.Models.Person", "Person")
                        .WithMany("Exceptions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecretSanta.Models.PersonGroup", b =>
                {
                    b.HasOne("SecretSanta.Models.Group", "Group")
                        .WithMany("PersonGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SecretSanta.Models.Person", "Person")
                        .WithMany("Groups")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
